# Require the AWS provider plugin 
require 'vagrant-aws'

# Create and configure the AWS instance(s)
Vagrant.configure('2') do |config|
  
  # Since we are using AWS AMI, below config.vm.box is just for syntax purpose.
  config.vm.box = 'perconajayj/centos-x86_64'

  # config.vm.hostname is not mandatory as AWS will handle the same.
  # config.vm.hostname = "webserver101"

  # Specify AWS provider configurations
  config.vm.provider 'aws' do |aws, override|

    # vagrant-aws plugin will read AWS authentication information 
    # 1) from environment variables or 
    # 2) from AWS credentials under $HOME/.aws/
    # We have configured option 2 here, so just need to mention which profile to use.

    # aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
    # aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
    aws.aws_profile = "devops"

    # Specify AWS SSH keypair to use
    aws.keypair_name = 'pe-20181226-us-west-2'

    # Specify AWS instance type to use
    aws.instance_type = 't2.micro'

    # Specify AWS region
    aws.region = 'us-west-2'
    
    # Specify AWS AMI ID 
    aws.ami = 'ami-0bbe6b35405ecebdb'  		# Ubuntu Server 18.04 LTS (HVM) 

    # Specify AWS security group(s). Make sure you have ssh, http, https enabled for the same.
    aws.security_groups = ['secgrp-for-web']

    # Specify username and private key path
    override.ssh.username = 'ubuntu'
    override.ssh.private_key_path = '~/.ssh/pe-20181226-us-west-2.pem'
  end

  # Specify Ansible as provisioner and provide the playbook details.
  config.vm.provision "ansible_local" do |ansible|
    ansible.verbose = "v"
    ansible.playbook = "../playbooks/deploy-infra.yaml"
  end
end
